y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
# remove rows with full NAs
X <- X[!apply(is.na(X), 1, all),]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 1000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
# remove rows with full NAs
X <- X[!apply(is.na(X), 1, all),]
data <- data.frame(y, X)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 1000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
# remove rows with full NAs
X <- X[!apply(is.na(X), 1, all),]
y <- y[!apply(is.na(X), 1, all)]
data <- data.frame(y, X)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 1000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
misaem.fork$coefficients
misaem.fork$X.mu
misaem.fork$mu.X
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 1000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
warnings()
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 10000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
misaem.fork.model$coefficients
misaem.fork.model$mu.X
misaem.fork.model$Sigma.X
misaem.fork.model$Sig.X
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 5000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
misaem.fork.model$coefficients
misaem.fork.model$mu.X
misaem.fork.model$Sig.X
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 1000
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
misaem.fork::miss.glm()
misaem.fork::miss.glm
remotes::install_github("mullerchristophe21/misaem", force=TRUE)
Sys.setenv(GITHUB_PAT="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")
remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE))
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE))
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE))
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE))
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE, subsets=NULL))
formula
data
formula
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE, subsets=NULL))
1:0
1:1
misaem.fork.model <- misaem.fork::miss.glm(formula, data, control = list(var_cal=FALSE, subsets=c(NA)))
misaem.model <- misaem::miss.glm(formula, data,  control = list(var_cal=FALSE))
misaem.model <- misaem::miss.glm(formula, data)
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
X.new <- X[1:100,]
X.new <- X[1:50,]
predict(misaem.model, X.new)
predict(misaem.model.fork, X.new)
predict(misaem.fork.model, X.new)
X.new <- X[1:50,]
predict(misaem.fork.model, X.new)
X.new <- X[1:50,]
predict(misaem.model, X.new)
X.new <- X[1:50,]
predict(misaem.fork.model, X.new)
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
X.new <- X[1:50,]
predict(misaem.model, X.new)
X.new <- X[1:50,]
predict(misaem.fork.model, X.new)
predict(misaem.fork.model, X.new, method="map")
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("mullerchristophe21/misaem", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
X.new <- X[1:50,]
predict(misaem.model, X.new)
X.new <- X[1:50,]
predict(misaem.fork.model, X.new, method="map")
remove.packages("misaem.fork", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_local("~/INRIA/R_scripts/misaem_fork", force=TRUE)
#remotes::install_github("wjiang94/misaem", force=TRUE)
# generate data
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
tic <- Sys.time()
misaem.model <- misaem::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem <- toc - tic)
X.new <- X[1:50,]
predict(misaem.model, X.new)
X.new <- X[1:50,]
predict(misaem.fork.model, X.new, method="map")
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
predict(misaem.fork.model, X.new, method="map")
X.new <- X[1:50,]
predict(misaem.fork.model, X.new, method="map")
library(misaem.fork)
predict(misaem.fork.model, X.new, method="map")
X
debug(predict(misaem.fork.model, X.new, method="map"))
debug(predict)
predict(misaem.fork.model, X.new, method="map")
misaem.fork::predict(misaem.fork.model, X.new, method="map")
remove.packages("misaem", lib="~/INRIA/R_scripts/logistic_with_NAs/renv/library/windows/R-4.4/x86_64-w64-mingw32")
mu <- c(3,2,1)
sigma <- matrix(c(1,0.5,0.1,0.5,1,0.5,0.1,0.5,1), nrow=3, ncol=3)
beta <- c(-2,1,1)
n <- 100
X <- MASS::mvrnorm(n, mu, sigma)
y.logits <- X %*% beta
y.probs <- 1/(1+exp(-y.logits))
y <- rbinom(n, 1, y.probs)
# add some NAs in X, mcar with p = 0.20
M <- matrix(rbinom(n*3, 1, 0.2), nrow=n, ncol=3)
X[M == 1] <- NA
X_old <- X
# remove rows with full NAs
X <- X[!apply(is.na(X_old), 1, all),]
y <- y[!apply(is.na(X_old), 1, all)]
data <- data.frame(y, X)
formula <- as.formula(paste("y ~", paste0("X", 1:3, collapse = " + ")))
tic <- Sys.time()
misaem.fork.model <- misaem.fork::miss.glm(formula, data)
toc <- Sys.time()
(time.misaem.fork <- toc - tic)
X.new <- X[1:50,]
misaem.fork::predict(misaem.fork.model, X.new, method="map")
predict(misaem.fork.model, X.new, method="map")
